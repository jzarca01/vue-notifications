{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PLUGIN_NAME","PACKAGE_NAME","TYPES","error","warn","info","success","question","MESSAGES","alreadyInstalled","methodNameConflict","showDefaultMessage","_ref","type","message","msg","title","console","log","showMessage","config","vueApp","result","valuesObj","keys","forEach","field","bind","call","pluginOptions","cb","setMethod","name","options","configName","methods","newConfig","assign","propertyName","makeMixin","Vue","_ref2","version","match","notifications","notificationsField","$options","$emit","attachedMethods","undefined","unlinkVueNotificationPlugin","types","timeout","installed","install","arguments","length","targetObj","typesObj","mixin","setPluginOptions","v","window","use"],"mappings":"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","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PLUGIN_NAME = 'VueNotifications';\nvar PACKAGE_NAME = 'vue-notifications';\nvar PROPERTY_NAME = 'notifications';\n\nvar TYPES = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success',\n  question: 'question'\n};\n\nvar EVANGELION = 1;\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed',\n  methodNameConflict: PLUGIN_NAME + ': names conflict - '\n};\n\nfunction getVersion(Vue) {\n  var version = Vue.version.match(/(\\d+)/g);\n  return +version[0];\n}\n\nfunction showDefaultMessage(_ref) {\n  var type = _ref.type,\n      message = _ref.message,\n      title = _ref.title;\n\n  var msg = 'Title: ' + title + ', Message: ' + message + ', Type: ' + type;\n  if (type === TYPES.error) console.error(msg);else if (type === TYPES.warn) console.warn(msg);else console.log(msg);\n}\n\nfunction getValues(vueApp, config) {\n  var result = {};\n\n  Object.keys(config).forEach(function (field) {\n    if (field === 'cb') {\n      result[field] = config[field].bind(vueApp);\n    } else {\n      result[field] = typeof config[field] === 'function' ? config[field].call(vueApp) : config[field];\n    }\n  });\n\n  return result;\n}\n\nfunction showMessage(config, vueApp) {\n  var valuesObj = getValues(vueApp, config);\n  var isMethodOverridden = VueNotifications.pluginOptions[valuesObj.type];\n  var method = isMethodOverridden ? VueNotifications.pluginOptions[valuesObj.type] : showDefaultMessage;\n  method(valuesObj, vueApp);\n\n  if (config.cb) return config.cb();\n}\n\nfunction addMethods(targetObj, typesObj) {\n  Object.keys(typesObj).forEach(function (v) {\n    targetObj[typesObj[v]] = function (config) {\n      config.type = typesObj[v];\n\n      return showMessage(config);\n    };\n  });\n}\n\nfunction setMethod(vueApp, name, options, pluginOptions) {\n  if (!options.methods) options.methods = {};\n\n  if (!options.methods[name]) {\n    options.methods[name] = makeMethod(vueApp, name, options, pluginOptions);\n  }\n}\n\nfunction makeMethod(vueApp, configName, options, pluginOptions) {\n  return function (config) {\n    var newConfig = Object.assign({}, VueNotifications.config, options[VueNotifications.propertyName][configName], config);\n\n    return showMessage(newConfig, pluginOptions, vueApp);\n  };\n}\n\nfunction initVueNotificationPlugin(vueApp, notifications, pluginOptions) {\n  if (!notifications) return;\n  Object.keys(notifications).forEach(function (name) {\n    return setMethod(vueApp, name, vueApp.$options, pluginOptions);\n  });\n  vueApp.$emit(PACKAGE_NAME + '-initiated');\n}\n\nfunction unlinkVueNotificationPlugin(vueApp, notifications) {\n  if (!notifications) return;\n  var attachedMethods = vueApp.$options.methods;\n  Object.keys(notifications).forEach(function (name) {\n    if (attachedMethods[name]) {\n      attachedMethods[name] = undefined;\n      delete attachedMethods[name];\n    }\n  });\n\n  vueApp.$emit(PACKAGE_NAME + '-unlinked');\n}\n\nfunction makeMixin(Vue, pluginOptions) {\n  var _ref2;\n\n  var init = getVersion(Vue) === EVANGELION ? 'init' : 'beforeCreate';\n\n  return _ref2 = {}, _defineProperty(_ref2, init, function () {\n    var notificationsField = this.$options[VueNotifications.propertyName];\n    initVueNotificationPlugin(this, notificationsField, pluginOptions);\n  }), _defineProperty(_ref2, 'beforeDestroy', function beforeDestroy() {\n    var notificationsField = this.$options[VueNotifications.propertyName];\n    unlinkVueNotificationPlugin(this, notificationsField);\n  }), _ref2;\n}\n\nvar VueNotifications = {\n  types: TYPES,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPES.info,\n    timeout: 3000\n  },\n  pluginOptions: {},\n  installed: false,\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n    var mixin = makeMixin(Vue, pluginOptions);\n    Vue.mixin(mixin);\n\n    this.setPluginOptions(pluginOptions);\n    addMethods(this, this.types);\n\n    this.installed = true;\n  },\n  setPluginOptions: function setPluginOptions() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this.pluginOptions = options;\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\nreturn VueNotifications;\n}));\n"]}